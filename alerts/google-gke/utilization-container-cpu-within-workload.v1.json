{
  "displayName": "GKE Container - High CPU Limit Utilization (Workload: ${metric.label.metadata_system_top_level_controller_name})",
  "documentation": {
    "content": "[View Workload Details](https://console.cloud.google.com/kubernetes/deployment/${metric_or_resource.label.location}/${metric_or_resource.label.cluster_name}/${metric_or_resource.label.namespace_name}/${metric.label.metadata_system_top_level_controller_name}/observability?project=${metric_or_resource.label.project_id}).\n- Containers that exceed CPU utilization limit are CPU throttled. To avoid application slowdown and unresponsiveness, you can either keep CPU usage below the CPU limit or increase the limit [View Documentation](https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits)\n- If alerts tend to be false positive or noisy, consider visiting the alert policy page and changing the threshold, the rolling (alignment) window, and the retest (duration) window. [Alerting policies documentation](https://cloud.google.com/monitoring/alerts/concepts-indepth), [PromQL documentation](https://cloud.google.com/monitoring/promql/create-promql-alerts-console)",
    "mimeType": "text/markdown"
  },
  "userLabels": {
    "workload_name": "${metric.label.metadata_system_top_level_controller_name}",
    "workload_type": "${metric.label.metadata_system_top_level_controller_type}",
    "project_id": "${metric_or_resource.label.project_id}",
    "location": "${metric_or_resource.label.location}",
    "cluster": "${metric_or_resource.label.cluster_name}",
    "namespace": "${metric_or_resource.label.namespace_name}"
  },
  "conditions": [
    {
      "displayName": "CPU Limit Utilization is high for a GKE container in ${metric.label.metadata_system_top_level_controller_name} workload",
      "conditionPrometheusQueryLanguage": {
        "duration": "0s",
        "evaluationInterval": "30s",
        "query": "label_replace(\n  rate({\n    \"kubernetes.io/container/cpu/core_usage_time\",\n    monitored_resource=\"k8s_container\",\n    project_id=~\"${metric_or_resource.label.project_id}\",\n    metadata_system_top_level_controller_name=~\"${metric.label.metadata_system_top_level_controller_name}\",\n    metadata_system_top_level_controller_type=~\"${metric.label.metadata_system_top_level_controller_type}\",\n    cluster_name=~\"${metric_or_resource.label.cluster_name}\",\n    location=~\"${metric_or_resource.label.location}\",\n    namespace_name=~\"${metric_or_resource.label.namespace_name}\"\n  }[5m])\n  /\n  (avg_over_time({\n    \"kubernetes.io/container/cpu/limit_cores\",\n    monitored_resource=\"k8s_container\",\n    project_id=~\"${metric_or_resource.label.project_id}\",\n    metadata_system_top_level_controller_name=~\"${metric.label.metadata_system_top_level_controller_name}\",\n    metadata_system_top_level_controller_type=~\"${metric.label.metadata_system_top_level_controller_type}\",\n    cluster_name=~\"${metric_or_resource.label.cluster_name}\",\n    location=~\"${metric_or_resource.label.location}\",\n    namespace_name=~\"${metric_or_resource.label.namespace_name}\"\n  }[5m]) > 0),\n  \"p\", \"CPU Limit Utilization\", \"\", \"\"\n)\n> 0.9"
      }
    }
  ],
  "alertStrategy": {
    "autoClose": "604800s",
    "notificationPrompts": [
      "OPENED",
      "CLOSED"
    ]
  },
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": [],
  "severity": "SEVERITY_UNSPECIFIED"
}
