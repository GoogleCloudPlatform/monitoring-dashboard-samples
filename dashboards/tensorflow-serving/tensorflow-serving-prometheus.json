{
  "displayName": "TensorFlow Serving Prometheus Overview",
  "dashboardFilters": [
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "cluster",
      "stringValue": "",
      "templateVariable": "cluster",
      "valueType": "STRING"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "location",
      "stringValue": "",
      "templateVariable": "location",
      "valueType": "STRING"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "namespace",
      "stringValue": "",
      "templateVariable": "namespace",
      "valueType": "STRING"
    },
    {
      "filterType": "METRIC_LABEL",
      "labelKey": "model_name",
      "stringValue": "",
      "templateVariable": "model_name",
      "valueType": "STRING"
    }
  ],
  "labels": {},
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "height": 8,
        "width": 48,
        "widget": {
          "title": "Instructions",
          "text": {
            "content": "Use the filter dropdowns above to drill down to a single cluster / location / namespace / model. Some of these charts (e.g. p50 latency) may not show meaningful values when aggregated over multiple models.\n\nFor more information on setting up Tensorflow Serving in your GKE cluster, see [Serve a model with a single GPU in GKE ](https://cloud.google.com/kubernetes-engine/docs/tutorials/online-ml-inference).",
            "format": "MARKDOWN",
            "style": {
              "backgroundColor": "#E7EFFE",
              "fontSize": "FS_LARGE",
              "horizontalAlignment": "H_LEFT",
              "padding": "P_EXTRA_SMALL",
              "pointerLocation": "POINTER_LOCATION_UNSPECIFIED",
              "textColor": "#212121",
              "verticalAlignment": "V_TOP"
            }
          }
        }
      },
      {
        "yPos": 8,
        "height": 8,
        "width": 16,
        "widget": {
          "title": "Request rate",
          "scorecard": {
            "blankView": {},
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "timeSeriesFilter": {
                "aggregation": {
                  "alignmentPeriod": "60s",
                  "crossSeriesReducer": "REDUCE_SUM",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_RATE"
                },
                "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_count/counter\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
              },
              "unitOverride": ""
            }
          }
        }
      },
      {
        "yPos": 8,
        "xPos": 16,
        "height": 8,
        "width": 16,
        "widget": {
          "title": "p50 Serving Request Latency (us)",
          "scorecard": {
            "blankView": {},
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "timeSeriesFilter": {
                "aggregation": {
                  "alignmentPeriod": "60s",
                  "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_DELTA"
                },
                "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
              },
              "unitOverride": ""
            }
          }
        }
      },
      {
        "yPos": 8,
        "xPos": 32,
        "height": 8,
        "width": 16,
        "widget": {
          "title": "Error rate (%)",
          "scorecard": {
            "blankView": {},
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "prometheusQuery": "sum (rate(:tensorflow:serving:request_count{status!=\"OK\", ${cluster}, ${location}, ${namespace}}[${__interval}])) \n/ \nsum (rate(:tensorflow:serving:request_count{${cluster}, ${location}, ${namespace}}[${__interval}])) * 100 > 0\n\nor\n\nclamp(sum (rate(:tensorflow:serving:request_count{${cluster}, ${location}, ${namespace}}[${__interval}])), 0, 0)"
            }
          }
        }
      },
      {
        "yPos": 16,
        "height": 4,
        "width": 48,
        "widget": {
          "title": "Throughput",
          "sectionHeader": {
            "dividerBelow": false,
            "subtitle": "Inspect the rate at which the model server is handling requests and processing tokens."
          }
        }
      },
      {
        "yPos": 20,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Request rate",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "",
                "minAlignmentPeriod": "60s",
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"status\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_count/counter\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 20,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Pending task distribution in graph executor",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_pending_queue_length_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_pending_queue_length_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_pending_queue_length_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 36,
        "height": 4,
        "width": 48,
        "widget": {
          "title": "Latency",
          "sectionHeader": {
            "dividerBelow": false,
            "subtitle": "Inspect the processing time taken per request."
          }
        }
      },
      {
        "yPos": 40,
        "height": 18,
        "width": 24,
        "widget": {
          "title": "Request latency (us)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:request_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 40,
        "xPos": 24,
        "height": 18,
        "width": 24,
        "widget": {
          "title": "Runtime latency (us)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:runtime_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:runtime_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:serving:runtime_latency/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace} ${model_name}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 58,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Saved model load latency",
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "Metric",
                "visible": false
              },
              {
                "column": "model_path",
                "visible": true
              },
              {
                "column": "value",
                "visible": true
              }
            ],
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "timeSeriesQuery": {
                  "outputFullDuration": true,
                  "prometheusQuery": "topk(30, sum by (model_path)(rate(:tensorflow:cc:saved_model:load_latency{${cluster}, ${location}, ${namespace}, ${model_name}}[${__interval}])))\n#This query may not fully reflect the original configuration.",
                  "unitOverride": "us"
                }
              }
            ],
            "metricVisualization": "BAR"
          }
        }
      },
      {
        "yPos": 74,
        "height": 4,
        "width": 48,
        "widget": {
          "title": "Errors",
          "sectionHeader": {
            "dividerBelow": false,
            "subtitle": "Inspect error logs and the rate of requests with status != \"OK\" and logs. Populate the cluster / location / namespace filters to drill down to the relevant logs."
          }
        }
      },
      {
        "yPos": 78,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Error logs",
          "logsPanel": {
            "filter": "resource.type=\"k8s_container\"\n${cluster}\n${location}\n${namespace}\n",
            "resourceNames": [
              "projects/chelseychen-gke-test/locations/global/logScopes/_Default"
            ]
          }
        }
      },
      {
        "yPos": 78,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Unsuccessful request rate by status",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "sum by (status) (rate(:tensorflow:serving:request_count{status!=\"OK\", ${cluster}, ${location}, ${namespace}}[${__interval}])) \n/ \nsum (rate(:tensorflow:serving:request_count{${cluster}, ${location}, ${namespace}}[${__interval}])) * 100 > 0\n\nor\n\nlabel_replace(\n  clamp(\n    sum (rate(:tensorflow:serving:request_count{${cluster}, ${location}, ${namespace}}[${__interval}])), 0, 0),\n  \"status\", \"NOT_OK\", \"\", \"\")\n"
                }
              }
            ],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 94,
        "height": 4,
        "width": 48,
        "widget": {
          "title": "Graph metrics",
          "sectionHeader": {
            "dividerBelow": false,
            "subtitle": "The following graph metrics provide insight into the underlying Tensorflow execution performance."
          }
        }
      },
      {
        "yPos": 98,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph execution rate",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_runs/counter\" resource.type=\"prometheus_target\""
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 98,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph build calls",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_build_calls/counter\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 114,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Total graph execution time (us)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "sum(rate(:tensorflow:core:graph_run_time_usecs{${cluster},${location},${namespace}}[${__interval}]))",
                  "unitOverride": "us"
                }
              }
            ],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 114,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "",
          "singleViewGroup": {
            "displayType": "DROPDOWN"
          }
        }
      },
      {
        "yPos": 114,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph execution time distribution (us)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_time_usecs_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_time_usecs_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_time_usecs_histogram/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              }
            ],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 114,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph build time (us)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "legendTemplate": "",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "prometheusQuery": "sum(rate(:tensorflow:core:graph_build_time_usecs{${cluster}, ${location}, ${namespace}}[${__interval}]))",
                  "unitOverride": "us"
                }
              }
            ],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 130,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph input tensor bytes",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_input_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_input_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_input_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              }
            ],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 130,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "",
          "singleViewGroup": {
            "displayType": "DROPDOWN"
          }
        }
      },
      {
        "yPos": 130,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph output tensor bytes",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "p50",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_50",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_output_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p95",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_95",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_output_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              },
              {
                "legendTemplate": "p99",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "crossSeriesReducer": "REDUCE_PERCENTILE_99",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_run_output_tensor_bytes/histogram\" resource.type=\"prometheus_target\" ${cluster} ${location} ${namespace}"
                  }
                }
              }
            ],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 130,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Graph optimization time by kind (us)",
          "timeSeriesTable": {
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "outputFullDuration": true,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"kind\"",
                        "metric.label.\"name\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/:tensorflow:core:graph_optimization_usecs/counter\" resource.type=\"prometheus_target\"",
                    "pickTimeSeriesFilter": {
                      "direction": "TOP",
                      "numTimeSeries": 30,
                      "rankingMethod": "METHOD_MEAN"
                    }
                  },
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "BAR",
            "opsAnalyticsSettings": {
              "maxRows": "0",
              "pageSize": "0",
              "showFilterBar": false
            }
          }
        }
      }
    ]
  }
}
