{
  "displayName": "OpenTelemetry Collector",
  "dashboardFilters": [],
  "labels": {},
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "height": 16,
        "width": 24,
        "widget": {
          "title": "OpenTelemetry Collector Uptime",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "Version: ${metric.labels.version}, Instance:${resource.labels.instance}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"version\"",
                        "resource.label.\"project_id\"",
                        "resource.label.\"location\"",
                        "resource.label.\"cluster\"",
                        "resource.label.\"namespace\"",
                        "resource.label.\"job\"",
                        "resource.label.\"instance\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/otelcol_process_uptime_seconds_total/counter\" resource.type=\"prometheus_target\""
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "OpenTelemetry Collector Memory Usage",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "Instance:${resource.labels.instance}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"project_id\"",
                        "resource.label.\"location\"",
                        "resource.label.\"namespace\"",
                        "resource.label.\"cluster\"",
                        "resource.label.\"job\"",
                        "resource.label.\"instance\""
                      ],
                      "perSeriesAligner": "ALIGN_MEAN"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/otelcol_process_memory_rss_bytes/gauge\" resource.type=\"prometheus_target\""
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 16,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Cloud Observability API Request Count",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "sum by (\"grpc_client_status\",\"grpc_client_method\",\"project_id\",\"location\",\"cluster\",\"namespace\",\"job\",\"instance\")(rate({\"__name__\"=\"grpc_client_attempt_duration_seconds_count\"}[${__interval}]))\n#This promql query was automatically converted from a builder query, and it may not be fully equivalent to the builder query. Manually verify the promql query before using it and edit as needed."
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 16,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Cloud Monitoring Metric Point Count",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "Status: ${metric.labels.status} Instance: ${resource.labels.instance}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"status\"",
                        "resource.label.\"project_id\"",
                        "resource.label.\"location\"",
                        "resource.label.\"cluster\"",
                        "resource.label.\"namespace\"",
                        "resource.label.\"job\"",
                        "resource.label.\"instance\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"prometheus.googleapis.com/googlecloudmonitoring_point_count_total/counter\" resource.type=\"prometheus_target\""
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      }
    ]
  }
}