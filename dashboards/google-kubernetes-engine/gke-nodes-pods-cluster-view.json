{
  "displayName": "GKE Nodes and Pods - Cluster View",
  "dashboardFilters": [
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "project_id",
      "stringValue": "",
      "templateVariable": "project_id",
      "valueType": "STRING"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "location",
      "stringValue": "",
      "templateVariable": "location",
      "valueType": "STRING"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "cluster_name",
      "stringValue": "",
      "templateVariable": "cluster_name",
      "valueType": "STRING"
    }
  ],
  "labels": {},
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "height": 8,
        "width": 8,
        "widget": {
          "title": "Nodes",
          "id": "",
          "scorecard": {
            "blankView": {},
            "breakdowns": [],
            "dimensions": [],
            "measures": [],
            "thresholds": [],
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "prometheusQuery": "count(count by (\"project_id\",\"location\",\"cluster_name\",\"node_name\")(rate(kubernetes_io:node_cpu_core_usage_time{\"monitored_resource\"=\"k8s_node\",${cluster_name},${location},${project_id}}[${__interval}])))\n",
              "unitOverride": ""
            }
          }
        }
      },
      {
        "xPos": 8,
        "height": 8,
        "width": 8,
        "widget": {
          "title": "Containers",
          "id": "",
          "scorecard": {
            "blankView": {},
            "breakdowns": [],
            "dimensions": [],
            "measures": [],
            "thresholds": [],
            "timeSeriesQuery": {
              "outputFullDuration": false,
              "timeSeriesFilter": {
                "aggregation": {
                  "alignmentPeriod": "60s",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_RATE"
                },
                "filter": "metric.type=\"kubernetes.io/container/cpu/core_usage_time\" resource.type=\"k8s_container\" ${cluster_name} ${location} ${project_id}",
                "secondaryAggregation": {
                  "alignmentPeriod": "60s",
                  "crossSeriesReducer": "REDUCE_COUNT",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_MEAN"
                }
              },
              "unitOverride": ""
            }
          }
        }
      },
      {
        "xPos": 16,
        "height": 8,
        "width": 8,
        "widget": {
          "title": "Pods",
          "id": "",
          "scorecard": {
            "blankView": {},
            "breakdowns": [],
            "dimensions": [],
            "measures": [],
            "thresholds": [],
            "timeSeriesQuery": {
              "outputFullDuration": false,
              "prometheusQuery": "count(count by (\"project_id\",\"location\",\"cluster_name\",\"namespace_name\",\"pod_name\")(avg_over_time(kubernetes_io:pod_volume_utilization{\"monitored_resource\"=\"k8s_pod\",${cluster_name},${location},${project_id}}[${__interval}])))\n",
              "unitOverride": ""
            }
          }
        }
      },
      {
        "xPos": 24,
        "height": 12,
        "width": 24,
        "widget": {
          "title": "Node, container, pod count",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "node_count",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "count(count by (\"project_id\",\"location\",\"cluster_name\",\"node_name\")(rate(kubernetes_io:node_cpu_core_usage_time{\"monitored_resource\"=\"k8s_node\",${cluster_name},${location},${project_id}}[${__interval}])))\n"
                }
              },
              {
                "legendTemplate": "pod_count",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "count(count by (\"project_id\",\"location\",\"cluster_name\",\"namespace_name\",\"pod_name\")(avg_over_time(kubernetes_io:pod_volume_utilization{\"monitored_resource\"=\"k8s_pod\",${cluster_name},${location},${project_id}}[${__interval}])))\n"
                }
              },
              {
                "legendTemplate": "container_count",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"kubernetes.io/container/cpu/core_usage_time\" resource.type=\"k8s_container\" ${cluster_name} ${location} ${project_id}",
                    "secondaryAggregation": {
                      "crossSeriesReducer": "REDUCE_COUNT",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_COUNT"
                    }
                  }
                }
              }
            ],
            "thresholds": [],
            "timeshiftDuration": "0s",
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 12,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Pod count per workload",
          "timeSeriesTable": {
            "columnSettings": [
              {
                "displayName": "Workload name",
                "column": "system_labels.top_level_controller_name",
                "visible": true
              },
              {
                "displayName": "Pod count",
                "column": "value",
                "visible": true
              },
              {
                "column": "Metric",
                "visible": true
              },
              {
                "column": "Name",
                "visible": true
              },
              {
                "displayName": "Workload name",
                "column": "metadata_system_top_level_controller_name",
                "visible": true
              }
            ],
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "prometheusQuery": "count by (\"metadata_system_top_level_controller_name\")(\n  count by (\"project_id\",\"location\",\"cluster_name\",\"namespace_name\",\"pod_name\",\"metadata_system_top_level_controller_name\")(avg_over_time(kubernetes_io:pod_volume_utilization{\"monitored_resource\"=\"k8s_pod\",${cluster_name},${location},${project_id}}[${__interval}]))\n)\n"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 12,
        "height": 16,
        "width": 48,
        "widget": {
          "title": "Pod count breakdown",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 12,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Pod count per namespace",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "prometheusQuery": "count by (\"namespace_name\")(\n  count by (\"project_id\",\"location\",\"cluster_name\",\"namespace_name\",\"pod_name\",\"metadata_system_top_level_controller_name\")(avg_over_time(kubernetes_io:pod_volume_utilization{\"monitored_resource\"=\"k8s_pod\",${cluster_name},${location},${project_id}}[${__interval}]))\n)\n"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 28,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Autoscaler events",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "legendTemplate": "",
                "measures": [],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "rate(logging_googleapis_com:log_entry_count{\n  monitored_resource=\"k8s_cluster\",\n  ${project_id},\n  ${location},\n  ${cluster_name},\n  log=\"container.googleapis.com/cluster-autoscaler-visibility\"\n}[1m])\n"
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 28,
        "height": 32,
        "width": 48,
        "widget": {
          "title": "Container restarts",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 28,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Container starts and restarts (total)",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "legendTemplate": "",
                "measures": [],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "prometheusQuery": "label_replace(\n    count(kubernetes_io:container_uptime{monitored_resource=\"k8s_container\", ${project_id},${location}, ${cluster_name}} <= 60),\n    \"category\", \"Container Starts\", \"\", \"\"\n)\nor\nlabel_replace(\n  sum (\n    increase(kubernetes_io:container_restart_count{monitored_resource=\"k8s_container\", ${project_id}, ${location}, ${cluster_name}}[1m])\n  ),\n  \"category\", \"Container Restarts\", \"\", \"\"\n)\n"
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 44,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Container restart/min by workload",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "legendTemplate": "",
                "measures": [],
                "minAlignmentPeriod": "60s",
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"kubernetes.io/container/restart_count\" resource.type=\"k8s_container\" ${cluster_name} ${project_id} ${location}"
                  },
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 44,
        "xPos": 24,
        "height": 16,
        "width": 24,
        "widget": {
          "title": "Container restart/min by namespace",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "legendTemplate": "",
                "measures": [],
                "minAlignmentPeriod": "60s",
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "outputFullDuration": false,
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "groupByFields": [],
                      "perSeriesAligner": "ALIGN_DELTA"
                    },
                    "filter": "metric.type=\"kubernetes.io/container/restart_count\" resource.type=\"k8s_container\" ${cluster_name} ${project_id} ${location}",
                    "secondaryAggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"namespace_name\""
                      ],
                      "perSeriesAligner": "ALIGN_SUM"
                    }
                  },
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      }
    ]
  }
}