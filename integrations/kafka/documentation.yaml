exporter_type: standalone
app_name_short: Kafka
app_name: Apache {{app_name_short}}
app_site_name: Kafka
app_site_url: https://kafka.apache.org/
exporter_name: the Kafka exporter
exporter_pkg_name: kafka_exporter
exporter_repo_url: https://github.com/danielqsj/kafka_exporter
dashboard_available: true
minimum_exporter_version: v1.6.0
multiple_dashboards: false
dashboard_display_name: {{app_name_short}} Prometheus Overview
standalone_config: |
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: kafka-exporter
    labels:
      app.kubernetes.io/name: kafka-exporter
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: kafka-exporter
    template:
      metadata:
        labels:
          app.kubernetes.io/name: kafka-exporter
      spec:
        containers:
        - name: exporter
          image: danielqsj/kafka-exporter:v1.6.0
          args:
          - --kafka.server=kafka:9092
          ports:
          - containerPort: 9308
            name: prometheus
podmonitoring_config: |
  apiVersion: monitoring.googleapis.com/v1
  kind: PodMonitoring
  metadata:
    name: kafka-exporter
    labels:
      app.kubernetes.io/name: kafka-exporter
      app.kubernetes.io/part-of: google-cloud-managed-prometheus
  spec:
    endpoints:
    - port: prometheus
      scheme: http
      interval: 30s
      path: /metrics
    selector:
      matchLabels:
        app.kubernetes.io/name: kafka-exporter
additional_install_info: |
  The {{app_name_short}} exporter is configurable with [flags](https://github.com/danielqsj/kafka_exporter#flags){:class=external},
  which can be set as container args. This example assumes Kafka is available as a ClusterIP service named `kafka`
  on port `9092`.
sample_promql_query: up{job="kafka-exporter", cluster="{{cluster_name}}", namespace="{{namespace_name}}"}
alerts_config: |
  apiVersion: monitoring.googleapis.com/v1
  kind: Rules
  metadata:
    name: kafka-rules
    labels:
      app.kubernetes.io/component: rules
      app.kubernetes.io/name: kafka-rules
      app.kubernetes.io/part-of: google-cloud-managed-prometheus
  spec:
    groups:
    - name: kafka
      interval: 30s
      rules:
      - alert: KafkaChangeInNumberOfISRs
        annotations:
          description: |-
            Kafka change in number of isrs
              VALUE = {{ $value }}
              LABELS: {{ $labels }}
          summary: Kafka change in number of isrs (instance {{ $labels.instance }})
        expr: kafka_topic_partition_in_sync_replica != 10
        for: 5m
        labels:
          severity: critical
      - alert: KafkaUnderReplicatedPartitions
        annotations:
          description: |-
            Kafka under replicated partitions
              VALUE = {{ $value }}
              LABELS: {{ $labels }}
          summary: Kafka under replicated partitions (instance {{ $labels.instance }})
        expr: kafka_topic_partition_under_replicated_partition > 0
        for: 1m
        labels:
          severity: warning
additional_alert_info: You can adjust the alert thresholds to suit your application.
